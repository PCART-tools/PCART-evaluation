Run Command: python  deleteNN.py
Total File Number: 1
Total Httpx Invoked API Number: 1
Not Covered Httpx Invoked API Number: 0/1
Covered Httpx Invoked API Number: 1/1

Compatible Httpx Invoked API Number: 0/1
Unknown Compatible Httpx Invoked API Number: 0/1

Incompatible Httpx Invoked API Number: 1/1
-> Successfully Repaired Httpx Invoked API number: 1/1
-> Failed to Repair Httpx Invoked API Number: 0/1
-> Unknown Repair Status Httpx Invoked API Number: 0/1

===============================================================================================================================================================================
|                                                      File #1: httpx.delete#46NN/deleteNN.py has 1 Httpx-Invoked API(s)                                                      |
===============================================================================================================================================================================
| Invoked API #1: delete(params=None, url='https://example.com/resource', files=None, data=None, json=None)                                                                   |
|                                                                                                                                                                             |
| Location: At Line 2 in httpx.delete#46NN/deleteNN.py                                                                                                                        |
|                                                                                                                                                                             |
| Coverage: Yes                                                                                                                                                               |
|                                                                                                                                                                             |
| Definition @0.7.4 <dynamic>: (url: Union[ForwardRef('URL'), str], *, data: Union[dict, str, bytes, Iterator[bytes]] = None, files: Dict[str, Union[IO[~AnyStr], Tuple[str,  |
| IO[~AnyStr]], Tuple[str, IO[~AnyStr], str]]] = None, json: Any = None, params: Union[ForwardRef('QueryParams'), Mapping[str, Union[str, int, float, bool, NoneType]], List[ |
| Tuple[str, Union[str, int, float, bool, NoneType]]], str] = None, headers: Union[ForwardRef('Headers'), Dict[~AnyStr, ~AnyStr], List[Tuple[~AnyStr, ~AnyStr]]] = None, cook |
| ies: Union[ForwardRef('Cookies'), http.cookiejar.CookieJar, Dict[str, str]] = None, stream: bool = False, auth: Union[Tuple[Union[str, bytes], Union[str, bytes]], Callable |
| [[ForwardRef('AsyncRequest')], ForwardRef('AsyncRequest')], ForwardRef('BaseMiddleware')] = None, allow_redirects: bool = True, cert: Union[str, Tuple[str, str], Tuple[str |
| , str, str]] = None, verify: Union[str, bool, ssl.SSLContext] = True, timeout: Union[float, Tuple[float, float, float], ForwardRef('TimeoutConfig')] = None, trust_env: boo |
| l = None, proxies: Union[ForwardRef('URL'), str, ForwardRef('AsyncDispatcher'), Dict[Union[ForwardRef('URL'), str], Union[ForwardRef('URL'), str, ForwardRef('AsyncDispatch |
| er')]]] = None) -> httpx.models.Response                                                                                                                                    |
|                                                                                                                                                                             |
| Definition @0.7.5 <dynamic>: (url: Union[ForwardRef('URL'), str], *, params: Union[ForwardRef('QueryParams'), Mapping[str, Union[str, int, float, bool, NoneType, Sequence[ |
| Union[str, int, float, bool, NoneType]]]], List[Tuple[str, Union[str, int, float, bool, NoneType]]], str] = None, headers: Union[ForwardRef('Headers'), Dict[~AnyStr, ~AnyS |
| tr], List[Tuple[~AnyStr, ~AnyStr]]] = None, cookies: Union[ForwardRef('Cookies'), http.cookiejar.CookieJar, Dict[str, str]] = None, stream: bool = False, auth: Union[Tuple |
| [Union[str, bytes], Union[str, bytes]], Callable[[ForwardRef('AsyncRequest')], ForwardRef('AsyncRequest')], ForwardRef('BaseMiddleware')] = None, allow_redirects: bool = T |
| rue, cert: Union[str, Tuple[str, str], Tuple[str, str, str]] = None, verify: Union[str, bool, ssl.SSLContext] = True, timeout: Union[float, Tuple[float, float, float], For |
| wardRef('TimeoutConfig')] = None, trust_env: bool = None, proxies: Union[ForwardRef('URL'), str, ForwardRef('AsyncDispatcher'), Dict[Union[ForwardRef('URL'), str], Union[F |
| orwardRef('URL'), str, ForwardRef('AsyncDispatcher')]]] = None) -> httpx.models.Response                                                                                    |
|                                                                                                                                                                             |
| Compatible: No                                                                                                                                                              |
|                                                                                                                                                                             |
| Repair <Successful>: delete(params=None, url='https://example.com/resource')                                                                                                |
|                                                                                                                                                                             |
|-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------|


