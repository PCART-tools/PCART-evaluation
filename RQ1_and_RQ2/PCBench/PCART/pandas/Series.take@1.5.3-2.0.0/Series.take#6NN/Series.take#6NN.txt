Run Command: python  takeNN.py
Total File Number: 1
Total Pandas Invoked API Number: 2
Not Covered Pandas Invoked API Number: 0/2
Covered Pandas Invoked API Number: 2/2

Compatible Pandas Invoked API Number: 1/2
Unknown Compatible Pandas Invoked API Number: 0/2

Incompatible Pandas Invoked API Number: 1/2
-> Successfully Repaired Pandas Invoked API number: 0/1
-> Failed to Repair Pandas Invoked API Number: 0/1
-> Unknown Repair Status Pandas Invoked API Number: 1/1

===============================================================================================================================================================================
|                                                       File #1: Series.take#6NN/takeNN.py has 2 Pandas-Invoked API(s)                                                        |
===============================================================================================================================================================================
| Invoked API #1: pd.Series([('falcon', 'bird', 389.0), ('parrot', 'bird', 24.0), ('lion', 'mammal', 80.5), ('monkey', 'mammal', np.nan)], index=[0, 2, 3, 1])                |
|                                                                                                                                                                             |
| Location: At Line 3 in Series.take#6NN/takeNN.py                                                                                                                            |
|                                                                                                                                                                             |
| Coverage: Yes                                                                                                                                                               |
|                                                                                                                                                                             |
| Definition @1.5.3 <dynamic>: (data=None, index=None, dtype: 'Dtype | None' = None, name=None, copy: 'bool' = False, fastpath: 'bool' = False) -> 'None'                     |
|                                                                                                                                                                             |
| Definition @2.0.0 <dynamic>: (data=None, index=None, dtype: 'Dtype | None' = None, name=None, copy: 'bool | None' = None, fastpath: 'bool' = False) -> 'None'               |
|                                                                                                                                                                             |
| Compatible: Yes                                                                                                                                                             |
|                                                                                                                                                                             |
|-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------|
|                                                                                                                                                                             |
| Invoked API #2: df.take([0, 3], 0, None)                                                                                                                                    |
|                                                                                                                                                                             |
| Location: At Line 4 in Series.take#6NN/takeNN.py                                                                                                                            |
|                                                                                                                                                                             |
| Coverage: Yes                                                                                                                                                               |
|                                                                                                                                                                             |
| Definition @1.5.3 <dynamic>: (indices, axis: 'Axis' = 0, is_copy: 'bool | None' = None, **kwargs) -> 'Series'                                                               |
|                                                                                                                                                                             |
| Definition @2.0.0 <static>: {'pandas.tests.extension.json.JSONArray.take': ['(self,indexer,allow_fill=False,fill_value=None)'], 'pandas.tests.extension.json.array.JSONArra |
| y.take': ['(self,indexer,allow_fill=False,fill_value=None)'], 'pandas.tests.extension.decimal.DecimalArray.take': ['(self,indexer,allow_fill=False,fill_value=None)'], 'pan |
| das.tests.extension.decimal.array.DecimalArray.take': ['(self,indexer,allow_fill=False,fill_value=None)'], 'pandas.tests.extension.list.ListArray.take': ['(self,indexer,al |
| low_fill=False,fill_value=None)'], 'pandas.tests.extension.list.array.ListArray.take': ['(self,indexer,allow_fill=False,fill_value=None)'], 'pandas.tests.extension.array_w |
| ith_attr.FloatAttrArray.take': ['(self,indexer,allow_fill=False,fill_value=None)'], 'pandas.tests.extension.array_with_attr.array.FloatAttrArray.take': ['(self,indexer,all |
| ow_fill=False,fill_value=None)'], 'pandas.core.series.Series.take': ['(self,indices,axis:Axis=0,**kwargs)->Series'], 'pandas.core.algorithms.take': ['(arr,indices:TakeInde |
| xer,axis:AxisInt=0,allow_fill:bool=False,fill_value=None)'], 'pandas.core.generic.NDFrame.take': ['(self:NDFrameT,indices,axis:Axis=0,**kwargs)->NDFrameT'], 'pandas.core.a |
| rrays.IntervalArray.take': ['(self:IntervalArrayT,indices,*,allow_fill:bool=False,fill_value=None,axis=None,**kwargs)->IntervalArrayT'], 'pandas.core.arrays.interval.Inter |
| valArray.take': ['(self:IntervalArrayT,indices,*,allow_fill:bool=False,fill_value=None,axis=None,**kwargs)->IntervalArrayT'], 'pandas.core.arrays._mixins.NDArrayBackedExte |
| nsionArray.take': ['(self:NDArrayBackedExtensionArrayT,indices:TakeIndexer,*,allow_fill:bool=False,fill_value:Any=None,axis:AxisInt=0)->NDArrayBackedExtensionArrayT'], 'pa |
| ndas.core.arrays.ExtensionArray.take': ['(self:ExtensionArrayT,indices:TakeIndexer,*,allow_fill:bool=False,fill_value:Any=None)->ExtensionArrayT'], 'pandas.core.arrays.bas |
| e.ExtensionArray.take': ['(self:ExtensionArrayT,indices:TakeIndexer,*,allow_fill:bool=False,fill_value:Any=None)->ExtensionArrayT'], 'pandas.core.arrays.BaseMaskedArray.ta |
| ke': ['(self:BaseMaskedArrayT,indexer,*,allow_fill:bool=False,fill_value:Scalar|None=None,axis:AxisInt=0)->BaseMaskedArrayT'], 'pandas.core.arrays.masked.BaseMaskedArray.t |
| ake': ['(self:BaseMaskedArrayT,indexer,*,allow_fill:bool=False,fill_value:Scalar|None=None,axis:AxisInt=0)->BaseMaskedArrayT'], 'pandas.core.arrays.SparseArray.take': ['(s |
| elf:SparseArrayT,indices,*,allow_fill:bool=False,fill_value=None)->SparseArrayT'], 'pandas.core.arrays.sparse.array.SparseArray.take': ['(self:SparseArrayT,indices,*,allow |
| _fill:bool=False,fill_value=None)->SparseArrayT'], 'pandas.core.arrays.ArrowExtensionArray.take': ['(self,indices:TakeIndexer,allow_fill:bool=False,fill_value:Any=None)->A |
| rrowExtensionArray'], 'pandas.core.arrays.arrow.array.ArrowExtensionArray.take': ['(self,indices:TakeIndexer,allow_fill:bool=False,fill_value:Any=None)->ArrowExtensionArra |
| y'], 'pandas.core.indexes.datetimelike.DatetimeTimedeltaMixin.take': ['(self,indices,axis:Axis=0,allow_fill:bool=True,fill_value=None,**kwargs)'], 'pandas.core.indexes.bas |
| e.Index.take': ['(self,indices,axis:Axis=0,allow_fill:bool=True,fill_value=None,**kwargs)'], 'pandas.core.indexes.multi.MultiIndex.take': ['(self:MultiIndex,indices,axis:A |
| xis=0,allow_fill:bool=True,fill_value=None,**kwargs)->MultiIndex'], 'pandas.core.internals.array_manager.BaseArrayManager.take': ['(self:T,indexer,axis:AxisInt=1,verify:bo |
| ol=True,convert_indices:bool=True)->T'], 'pandas.core.internals.managers.BaseBlockManager.take': ['(self:T,indexer,axis:AxisInt=1,verify:bool=True,convert_indices:bool=Tru |
| e)->T'], 'pandas.core.groupby.DataFrameGroupBy.take': ['(self,indices:TakeIndexer,axis:Axis|None=0,**kwargs)->DataFrame'], 'pandas.core.groupby.SeriesGroupBy.take': ['(sel |
| f,indices:TakeIndexer,axis:Axis=0,**kwargs)->Series'], 'pandas.core.groupby.generic.DataFrameGroupBy.take': ['(self,indices:TakeIndexer,axis:Axis|None=0,**kwargs)->DataFra |
| me'], 'pandas.core.groupby.generic.SeriesGroupBy.take': ['(self,indices:TakeIndexer,axis:Axis=0,**kwargs)->Series']}                                                        |
|                                                                                                                                                                             |
| Compatible: No                                                                                                                                                              |
|                                                                                                                                                                             |
| Repair <Unknown>: df.take([0, 3], 0)                                                                                                                                        |
|                                                                                                                                                                             |
|-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------|


