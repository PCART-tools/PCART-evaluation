Run Command: python  snippet.py
Total File Number: 1
Total Numpy Invoked API Number: 2
Not Covered Numpy Invoked API Number: 0/2
Covered Numpy Invoked API Number: 2/2

Compatible Numpy Invoked API Number: 1/2
Unknown Compatible Numpy Invoked API Number: 0/2

Incompatible Numpy Invoked API Number: 1/2
-> Successfully Repaired Numpy Invoked API number: 1/1
-> Failed to Repair Numpy Invoked API Number: 0/1
-> Unknown Repair Status Numpy Invoked API Number: 0/1

======================================================================================================
|                      File #1: gistable/snippet.py has 2 Numpy-Invoked API(s)                       |
======================================================================================================
| Invoked API #1: np.histogram2d(xdata, ydata, bins=(nbins_x, nbins_y), normed=True)                 |
|                                                                                                    |
| Location: At Line 25 in gistable/snippet.py                                                        |
|                                                                                                    |
| Coverage: Yes                                                                                      |
|                                                                                                    |
| Definition @1.23.5 <dynamic>: (x, y, bins=10, range=None, normed=None, weights=None, density=None) |
|                                                                                                    |
| Definition @1.24.0 <dynamic>: (x, y, bins=10, range=None, density=None, weights=None)              |
|                                                                                                    |
| Compatible: No                                                                                     |
|                                                                                                    |
| Repair <Successful>: np.histogram2d(xdata, ydata, bins=(nbins_x, nbins_y))                         |
|                                                                                                    |
|----------------------------------------------------------------------------------------------------|
|                                                                                                    |
| Invoked API #2: np.random.normal(10.0, 15.0, size=(12540035, 2))                                   |
|                                                                                                    |
| Location: At Line 47 in gistable/snippet.py                                                        |
|                                                                                                    |
| Coverage: Yes                                                                                      |
|                                                                                                    |
| Definition @1.23.5 <static>: {'numpy.random._generator.Generator.normal': ['(self,loc:_ArrayLikeFl |
| oat_co=...,scale:_ArrayLikeFloat_co=...,size:None|_ShapeLike=...)->ndarray[Any,dtype[float64]]', ' |
| (self,loc:float=...,scale:float=...,size:None=...)->float'], 'numpy.random.RandomState.normal': [' |
| (self,loc:_ArrayLikeFloat_co=...,scale:_ArrayLikeFloat_co=...,size:None|_ShapeLike=...)->ndarray[A |
| ny,dtype[float64]]', '(self,loc:float=...,scale:float=...,size:None=...)->float'], 'numpy.random.m |
| trand.RandomState.normal': ['(self,loc:_ArrayLikeFloat_co=...,scale:_ArrayLikeFloat_co=...,size:No |
| ne|_ShapeLike=...)->ndarray[Any,dtype[float64]]', '(self,loc:float=...,scale:float=...,size:None=. |
| ..)->float']}                                                                                      |
|                                                                                                    |
| Definition @1.24.0 <static>: {'numpy.random._generator.Generator.normal': ['(self,loc:_ArrayLikeFl |
| oat_co=...,scale:_ArrayLikeFloat_co=...,size:None|_ShapeLike=...)->ndarray[Any,dtype[float64]]', ' |
| (self,loc:float=...,scale:float=...,size:None=...)->float'], 'numpy.random.RandomState.normal': [' |
| (self,loc:_ArrayLikeFloat_co=...,scale:_ArrayLikeFloat_co=...,size:None|_ShapeLike=...)->ndarray[A |
| ny,dtype[float64]]', '(self,loc:float=...,scale:float=...,size:None=...)->float'], 'numpy.random.m |
| trand.RandomState.normal': ['(self,loc:_ArrayLikeFloat_co=...,scale:_ArrayLikeFloat_co=...,size:No |
| ne|_ShapeLike=...)->ndarray[Any,dtype[float64]]', '(self,loc:float=...,scale:float=...,size:None=. |
| ..)->float']}                                                                                      |
|                                                                                                    |
| Compatible: Yes                                                                                    |
|                                                                                                    |
|----------------------------------------------------------------------------------------------------|


