Run Command: python  data_cleaning.py
Total File Number: 1
Total Pandas Invoked API Number: 16
Not Covered Pandas Invoked API Number: 0/16
Covered Pandas Invoked API Number: 16/16

Compatible Pandas Invoked API Number: 12/16
Unknown Compatible Pandas Invoked API Number: 0/16

Incompatible Pandas Invoked API Number: 4/16
-> Successfully Repaired Pandas Invoked API number: 0/4
-> Failed to Repair Pandas Invoked API Number: 0/4
-> Unknown Repair Status Pandas Invoked API Number: 4/4

======================================================================================================
|           File #1: fuel_forecast_explorer/data_cleaning.py has 16 Pandas-Invoked API(s)            |
======================================================================================================
| Invoked API #1: pd.read_csv('./data/aggregated/prices_all.csv.gz', compression='gzip')             |
|                                                                                                    |
| Location: At Line 7 in fuel_forecast_explorer/data_cleaning.py                                     |
|                                                                                                    |
| Coverage: Yes                                                                                      |
|                                                                                                    |
| Definition @1.5.3 <dynamic>: (filepath_or_buffer: 'FilePath | ReadCsvBuffer[bytes] | ReadCsvBuffer |
| [str]', *, sep: 'str | None | lib.NoDefault' = <no_default>, delimiter: 'str | None | lib.NoDefaul |
| t' = None, header: "int | Sequence[int] | None | Literal['infer']" = 'infer', names: 'Sequence[Has |
| hable] | None | lib.NoDefault' = <no_default>, index_col: 'IndexLabel | Literal[False] | None' = N |
| one, usecols=None, squeeze: 'bool | None' = None, prefix: 'str | lib.NoDefault' = <no_default>, ma |
| ngle_dupe_cols: 'bool' = True, dtype: 'DtypeArg | None' = None, engine: 'CSVEngine | None' = None, |
|  converters=None, true_values=None, false_values=None, skipinitialspace: 'bool' = False, skiprows= |
| None, skipfooter: 'int' = 0, nrows: 'int | None' = None, na_values=None, keep_default_na: 'bool' = |
|  True, na_filter: 'bool' = True, verbose: 'bool' = False, skip_blank_lines: 'bool' = True, parse_d |
| ates=None, infer_datetime_format: 'bool' = False, keep_date_col: 'bool' = False, date_parser=None, |
|  dayfirst: 'bool' = False, cache_dates: 'bool' = True, iterator: 'bool' = False, chunksize: 'int | |
|  None' = None, compression: 'CompressionOptions' = 'infer', thousands: 'str | None' = None, decima |
| l: 'str' = '.', lineterminator: 'str | None' = None, quotechar: 'str' = '"', quoting: 'int' = 0, d |
| oublequote: 'bool' = True, escapechar: 'str | None' = None, comment: 'str | None' = None, encoding |
| : 'str | None' = None, encoding_errors: 'str | None' = 'strict', dialect: 'str | csv.Dialect | Non |
| e' = None, error_bad_lines: 'bool | None' = None, warn_bad_lines: 'bool | None' = None, on_bad_lin |
| es=None, delim_whitespace: 'bool' = False, low_memory=True, memory_map: 'bool' = False, float_prec |
| ision: "Literal[('high', 'legacy')] | None" = None, storage_options: 'StorageOptions' = None) -> ' |
| DataFrame | TextFileReader'                                                                        |
|                                                                                                    |
| Definition @2.0.0 <dynamic>: (filepath_or_buffer: 'FilePath | ReadCsvBuffer[bytes] | ReadCsvBuffer |
| [str]', *, sep: 'str | None | lib.NoDefault' = <no_default>, delimiter: 'str | None | lib.NoDefaul |
| t' = None, header: "int | Sequence[int] | None | Literal['infer']" = 'infer', names: 'Sequence[Has |
| hable] | None | lib.NoDefault' = <no_default>, index_col: 'IndexLabel | Literal[False] | None' = N |
| one, usecols=None, dtype: 'DtypeArg | None' = None, engine: 'CSVEngine | None' = None, converters= |
| None, true_values=None, false_values=None, skipinitialspace: 'bool' = False, skiprows=None, skipfo |
| oter: 'int' = 0, nrows: 'int | None' = None, na_values=None, keep_default_na: 'bool' = True, na_fi |
| lter: 'bool' = True, verbose: 'bool' = False, skip_blank_lines: 'bool' = True, parse_dates: 'bool  |
| | Sequence[Hashable] | None' = None, infer_datetime_format: 'bool | lib.NoDefault' = <no_default>, |
|  keep_date_col: 'bool' = False, date_parser=<no_default>, date_format: 'str | None' = None, dayfir |
| st: 'bool' = False, cache_dates: 'bool' = True, iterator: 'bool' = False, chunksize: 'int | None'  |
| = None, compression: 'CompressionOptions' = 'infer', thousands: 'str | None' = None, decimal: 'str |
| ' = '.', lineterminator: 'str | None' = None, quotechar: 'str' = '"', quoting: 'int' = 0, doublequ |
| ote: 'bool' = True, escapechar: 'str | None' = None, comment: 'str | None' = None, encoding: 'str  |
| | None' = None, encoding_errors: 'str | None' = 'strict', dialect: 'str | csv.Dialect | None' = No |
| ne, on_bad_lines: 'str' = 'error', delim_whitespace: 'bool' = False, low_memory=True, memory_map:  |
| 'bool' = False, float_precision: "Literal[('high', 'legacy')] | None" = None, storage_options: 'St |
| orageOptions' = None, dtype_backend: 'DtypeBackend | lib.NoDefault' = <no_default>) -> 'DataFrame  |
| | TextFileReader'                                                                                  |
|                                                                                                    |
| Compatible: Yes                                                                                    |
|                                                                                                    |
|----------------------------------------------------------------------------------------------------|
|                                                                                                    |
| Invoked API #2: df.info(verbose=True, null_counts=True)                                            |
|                                                                                                    |
| Location: At Line 8 in fuel_forecast_explorer/data_cleaning.py                                     |
|                                                                                                    |
| Coverage: Yes                                                                                      |
|                                                                                                    |
| Definition @1.5.3 <dynamic>: (verbose: 'bool | None' = None, buf: 'WriteBuffer[str] | None' = None |
| , max_cols: 'int | None' = None, memory_usage: 'bool | str | None' = None, show_counts: 'bool | No |
| ne' = None, null_counts: 'bool | None' = None) -> 'None'                                           |
|                                                                                                    |
| Definition @2.0.0 <static>: {'pandas.io.pytables.HDFStore.info': ['(self)->str'], 'pandas.core.ser |
| ies.Series.info': ['(self,verbose:bool|None=None,buf:IO[str]|None=None,max_cols:int|None=None,memo |
| ry_usage:bool|str|None=None,show_counts:bool=True)->None'], 'pandas.core.frame.DataFrame.info': [' |
| (self,verbose:bool|None=None,buf:WriteBuffer[str]|None=None,max_cols:int|None=None,memory_usage:bo |
| ol|str|None=None,show_counts:bool|None=None)->None']}                                              |
|                                                                                                    |
| Compatible: No                                                                                     |
|                                                                                                    |
| Repair <Unknown>: df.info(verbose=True)                                                            |
|                                                                                                    |
|----------------------------------------------------------------------------------------------------|
|                                                                                                    |
| Invoked API #3: df.info(verbose=True, null_counts=True)                                            |
|                                                                                                    |
| Location: At Line 16 in fuel_forecast_explorer/data_cleaning.py                                    |
|                                                                                                    |
| Coverage: Yes                                                                                      |
|                                                                                                    |
| Definition @1.5.3 <dynamic>: (verbose: 'bool | None' = None, buf: 'WriteBuffer[str] | None' = None |
| , max_cols: 'int | None' = None, memory_usage: 'bool | str | None' = None, show_counts: 'bool | No |
| ne' = None, null_counts: 'bool | None' = None) -> 'None'                                           |
|                                                                                                    |
| Definition @2.0.0 <static>: {'pandas.io.pytables.HDFStore.info': ['(self)->str'], 'pandas.core.ser |
| ies.Series.info': ['(self,verbose:bool|None=None,buf:IO[str]|None=None,max_cols:int|None=None,memo |
| ry_usage:bool|str|None=None,show_counts:bool=True)->None'], 'pandas.core.frame.DataFrame.info': [' |
| (self,verbose:bool|None=None,buf:WriteBuffer[str]|None=None,max_cols:int|None=None,memory_usage:bo |
| ol|str|None=None,show_counts:bool|None=None)->None']}                                              |
|                                                                                                    |
| Compatible: No                                                                                     |
|                                                                                                    |
| Repair <Unknown>: df.info(verbose=True)                                                            |
|                                                                                                    |
|----------------------------------------------------------------------------------------------------|
|                                                                                                    |
| Invoked API #4: pd.to_datetime(df['timestamp'], format='%Y%m%d %H:%M')                             |
|                                                                                                    |
| Location: At Line 20 in fuel_forecast_explorer/data_cleaning.py                                    |
|                                                                                                    |
| Coverage: Yes                                                                                      |
|                                                                                                    |
| Definition @1.5.3 <dynamic>: (arg: 'DatetimeScalarOrArrayConvertible | DictConvertible', errors: ' |
| DateTimeErrorChoices' = 'raise', dayfirst: 'bool' = False, yearfirst: 'bool' = False, utc: 'bool | |
|  None' = None, format: 'str | None' = None, exact: 'bool' = True, unit: 'str | None' = None, infer |
| _datetime_format: 'bool' = False, origin='unix', cache: 'bool' = True) -> 'DatetimeIndex | Series  |
| | DatetimeScalar | NaTType | None'                                                                 |
|                                                                                                    |
| Definition @2.0.0 <dynamic>: (arg: 'DatetimeScalarOrArrayConvertible | DictConvertible', errors: ' |
| DateTimeErrorChoices' = 'raise', dayfirst: 'bool' = False, yearfirst: 'bool' = False, utc: 'bool'  |
| = False, format: 'str | None' = None, exact: 'bool | lib.NoDefault' = <no_default>, unit: 'str | N |
| one' = None, infer_datetime_format: 'lib.NoDefault | bool' = <no_default>, origin: 'str' = 'unix', |
|  cache: 'bool' = True) -> 'DatetimeIndex | Series | DatetimeScalar | NaTType | None'               |
|                                                                                                    |
| Compatible: Yes                                                                                    |
|                                                                                                    |
|----------------------------------------------------------------------------------------------------|
|                                                                                                    |
| Invoked API #5: df.info(verbose=True, null_counts=True)                                            |
|                                                                                                    |
| Location: At Line 21 in fuel_forecast_explorer/data_cleaning.py                                    |
|                                                                                                    |
| Coverage: Yes                                                                                      |
|                                                                                                    |
| Definition @1.5.3 <dynamic>: (verbose: 'bool | None' = None, buf: 'WriteBuffer[str] | None' = None |
| , max_cols: 'int | None' = None, memory_usage: 'bool | str | None' = None, show_counts: 'bool | No |
| ne' = None, null_counts: 'bool | None' = None) -> 'None'                                           |
|                                                                                                    |
| Definition @2.0.0 <static>: {'pandas.io.pytables.HDFStore.info': ['(self)->str'], 'pandas.core.ser |
| ies.Series.info': ['(self,verbose:bool|None=None,buf:IO[str]|None=None,max_cols:int|None=None,memo |
| ry_usage:bool|str|None=None,show_counts:bool=True)->None'], 'pandas.core.frame.DataFrame.info': [' |
| (self,verbose:bool|None=None,buf:WriteBuffer[str]|None=None,max_cols:int|None=None,memory_usage:bo |
| ol|str|None=None,show_counts:bool|None=None)->None']}                                              |
|                                                                                                    |
| Compatible: No                                                                                     |
|                                                                                                    |
| Repair <Unknown>: df.info(verbose=True)                                                            |
|                                                                                                    |
|----------------------------------------------------------------------------------------------------|
|                                                                                                    |
| Invoked API #6: df.site_brand.str.lower()                                                          |
|                                                                                                    |
| Location: At Line 25 in fuel_forecast_explorer/data_cleaning.py                                    |
|                                                                                                    |
| Coverage: Yes                                                                                      |
|                                                                                                    |
| Definition @1.5.3 <dynamic>: ()                                                                    |
|                                                                                                    |
| Definition @2.0.0 <dynamic>: ()                                                                    |
|                                                                                                    |
| Compatible: Yes                                                                                    |
|                                                                                                    |
|----------------------------------------------------------------------------------------------------|
|                                                                                                    |
| Invoked API #7: df.site_brand.str.lower().str.replace(' ', '_')                                    |
|                                                                                                    |
| Location: At Line 25 in fuel_forecast_explorer/data_cleaning.py                                    |
|                                                                                                    |
| Coverage: Yes                                                                                      |
|                                                                                                    |
| Definition @1.5.3 <dynamic>: (to_replace=None, value=<no_default>, *, inplace: 'bool' = False, lim |
| it: 'int | None' = None, regex: 'bool' = False, method: "Literal[('pad', 'ffill', 'bfill')] | lib. |
| NoDefault" = <no_default>) -> 'Series | None'                                                      |
|                                                                                                    |
| Definition @2.0.0 <dynamic>: (to_replace=None, value=<no_default>, *, inplace: 'bool' = False, lim |
| it: 'int | None' = None, regex: 'bool' = False, method: "Literal[('pad', 'ffill', 'bfill')] | lib. |
| NoDefault" = <no_default>) -> 'Series | None'                                                      |
|                                                                                                    |
| Compatible: Yes                                                                                    |
|                                                                                                    |
|----------------------------------------------------------------------------------------------------|
|                                                                                                    |
| Invoked API #8: df.fuel_type.str.lower()                                                           |
|                                                                                                    |
| Location: At Line 28 in fuel_forecast_explorer/data_cleaning.py                                    |
|                                                                                                    |
| Coverage: Yes                                                                                      |
|                                                                                                    |
| Definition @1.5.3 <dynamic>: ()                                                                    |
|                                                                                                    |
| Definition @2.0.0 <dynamic>: ()                                                                    |
|                                                                                                    |
| Compatible: Yes                                                                                    |
|                                                                                                    |
|----------------------------------------------------------------------------------------------------|
|                                                                                                    |
| Invoked API #9: df.fuel_type.str.lower().str.replace(' ', '_')                                     |
|                                                                                                    |
| Location: At Line 28 in fuel_forecast_explorer/data_cleaning.py                                    |
|                                                                                                    |
| Coverage: Yes                                                                                      |
|                                                                                                    |
| Definition @1.5.3 <dynamic>: (to_replace=None, value=<no_default>, *, inplace: 'bool' = False, lim |
| it: 'int | None' = None, regex: 'bool' = False, method: "Literal[('pad', 'ffill', 'bfill')] | lib. |
| NoDefault" = <no_default>) -> 'Series | None'                                                      |
|                                                                                                    |
| Definition @2.0.0 <dynamic>: (to_replace=None, value=<no_default>, *, inplace: 'bool' = False, lim |
| it: 'int | None' = None, regex: 'bool' = False, method: "Literal[('pad', 'ffill', 'bfill')] | lib. |
| NoDefault" = <no_default>) -> 'Series | None'                                                      |
|                                                                                                    |
| Compatible: Yes                                                                                    |
|                                                                                                    |
|----------------------------------------------------------------------------------------------------|
|                                                                                                    |
| Invoked API #10: df.fuel_type.str.lower().str.replace(' ', '_').str.replace('/', '')               |
|                                                                                                    |
| Location: At Line 28 in fuel_forecast_explorer/data_cleaning.py                                    |
|                                                                                                    |
| Coverage: Yes                                                                                      |
|                                                                                                    |
| Definition @1.5.3 <dynamic>: (to_replace=None, value=<no_default>, *, inplace: 'bool' = False, lim |
| it: 'int | None' = None, regex: 'bool' = False, method: "Literal[('pad', 'ffill', 'bfill')] | lib. |
| NoDefault" = <no_default>) -> 'Series | None'                                                      |
|                                                                                                    |
| Definition @2.0.0 <dynamic>: (to_replace=None, value=<no_default>, *, inplace: 'bool' = False, lim |
| it: 'int | None' = None, regex: 'bool' = False, method: "Literal[('pad', 'ffill', 'bfill')] | lib. |
| NoDefault" = <no_default>) -> 'Series | None'                                                      |
|                                                                                                    |
| Compatible: Yes                                                                                    |
|                                                                                                    |
|----------------------------------------------------------------------------------------------------|
|                                                                                                    |
| Invoked API #11: df.price.replace(9999, -1)                                                        |
|                                                                                                    |
| Location: At Line 36 in fuel_forecast_explorer/data_cleaning.py                                    |
|                                                                                                    |
| Coverage: Yes                                                                                      |
|                                                                                                    |
| Definition @1.5.3 <dynamic>: (to_replace=None, value=<no_default>, *, inplace: 'bool' = False, lim |
| it: 'int | None' = None, regex: 'bool' = False, method: "Literal[('pad', 'ffill', 'bfill')] | lib. |
| NoDefault" = <no_default>) -> 'Series | None'                                                      |
|                                                                                                    |
| Definition @2.0.0 <dynamic>: (to_replace=None, value=<no_default>, *, inplace: 'bool' = False, lim |
| it: 'int | None' = None, regex: 'bool' = False, method: "Literal[('pad', 'ffill', 'bfill')] | lib. |
| NoDefault" = <no_default>) -> 'Series | None'                                                      |
|                                                                                                    |
| Compatible: Yes                                                                                    |
|                                                                                                    |
|----------------------------------------------------------------------------------------------------|
|                                                                                                    |
| Invoked API #12: df.price.replace(-1, 9999)                                                        |
|                                                                                                    |
| Location: At Line 39 in fuel_forecast_explorer/data_cleaning.py                                    |
|                                                                                                    |
| Coverage: Yes                                                                                      |
|                                                                                                    |
| Definition @1.5.3 <dynamic>: (to_replace=None, value=<no_default>, *, inplace: 'bool' = False, lim |
| it: 'int | None' = None, regex: 'bool' = False, method: "Literal[('pad', 'ffill', 'bfill')] | lib. |
| NoDefault" = <no_default>) -> 'Series | None'                                                      |
|                                                                                                    |
| Definition @2.0.0 <dynamic>: (to_replace=None, value=<no_default>, *, inplace: 'bool' = False, lim |
| it: 'int | None' = None, regex: 'bool' = False, method: "Literal[('pad', 'ffill', 'bfill')] | lib. |
| NoDefault" = <no_default>) -> 'Series | None'                                                      |
|                                                                                                    |
| Compatible: Yes                                                                                    |
|                                                                                                    |
|----------------------------------------------------------------------------------------------------|
|                                                                                                    |
| Invoked API #13: df.dropna()                                                                       |
|                                                                                                    |
| Location: At Line 41 in fuel_forecast_explorer/data_cleaning.py                                    |
|                                                                                                    |
| Coverage: Yes                                                                                      |
|                                                                                                    |
| Definition @1.5.3 <dynamic>: (*, axis: 'Axis' = 0, how: 'str | NoDefault' = <no_default>, thresh:  |
| 'int | NoDefault' = <no_default>, subset: 'IndexLabel' = None, inplace: 'bool' = False) -> 'DataFr |
| ame | None'                                                                                        |
|                                                                                                    |
| Definition @2.0.0 <dynamic>: (*, axis: 'Axis' = 0, how: 'AnyAll | NoDefault' = <no_default>, thres |
| h: 'int | NoDefault' = <no_default>, subset: 'IndexLabel' = None, inplace: 'bool' = False, ignore_ |
| index: 'bool' = False) -> 'DataFrame | None'                                                       |
|                                                                                                    |
| Compatible: Yes                                                                                    |
|                                                                                                    |
|----------------------------------------------------------------------------------------------------|
|                                                                                                    |
| Invoked API #14: df.info(verbose=True, null_counts=True)                                           |
|                                                                                                    |
| Location: At Line 42 in fuel_forecast_explorer/data_cleaning.py                                    |
|                                                                                                    |
| Coverage: Yes                                                                                      |
|                                                                                                    |
| Definition @1.5.3 <dynamic>: (verbose: 'bool | None' = None, buf: 'WriteBuffer[str] | None' = None |
| , max_cols: 'int | None' = None, memory_usage: 'bool | str | None' = None, show_counts: 'bool | No |
| ne' = None, null_counts: 'bool | None' = None) -> 'None'                                           |
|                                                                                                    |
| Definition @2.0.0 <static>: {'pandas.io.pytables.HDFStore.info': ['(self)->str'], 'pandas.core.ser |
| ies.Series.info': ['(self,verbose:bool|None=None,buf:IO[str]|None=None,max_cols:int|None=None,memo |
| ry_usage:bool|str|None=None,show_counts:bool=True)->None'], 'pandas.core.frame.DataFrame.info': [' |
| (self,verbose:bool|None=None,buf:WriteBuffer[str]|None=None,max_cols:int|None=None,memory_usage:bo |
| ol|str|None=None,show_counts:bool|None=None)->None']}                                              |
|                                                                                                    |
| Compatible: No                                                                                     |
|                                                                                                    |
| Repair <Unknown>: df.info(verbose=True)                                                            |
|                                                                                                    |
|----------------------------------------------------------------------------------------------------|
|                                                                                                    |
| Invoked API #15: pd.read_csv('./data/aggregated/sites_closed.csv', sep=';')                        |
|                                                                                                    |
| Location: At Line 45 in fuel_forecast_explorer/data_cleaning.py                                    |
|                                                                                                    |
| Coverage: Yes                                                                                      |
|                                                                                                    |
| Definition @1.5.3 <dynamic>: (filepath_or_buffer: 'FilePath | ReadCsvBuffer[bytes] | ReadCsvBuffer |
| [str]', *, sep: 'str | None | lib.NoDefault' = <no_default>, delimiter: 'str | None | lib.NoDefaul |
| t' = None, header: "int | Sequence[int] | None | Literal['infer']" = 'infer', names: 'Sequence[Has |
| hable] | None | lib.NoDefault' = <no_default>, index_col: 'IndexLabel | Literal[False] | None' = N |
| one, usecols=None, squeeze: 'bool | None' = None, prefix: 'str | lib.NoDefault' = <no_default>, ma |
| ngle_dupe_cols: 'bool' = True, dtype: 'DtypeArg | None' = None, engine: 'CSVEngine | None' = None, |
|  converters=None, true_values=None, false_values=None, skipinitialspace: 'bool' = False, skiprows= |
| None, skipfooter: 'int' = 0, nrows: 'int | None' = None, na_values=None, keep_default_na: 'bool' = |
|  True, na_filter: 'bool' = True, verbose: 'bool' = False, skip_blank_lines: 'bool' = True, parse_d |
| ates=None, infer_datetime_format: 'bool' = False, keep_date_col: 'bool' = False, date_parser=None, |
|  dayfirst: 'bool' = False, cache_dates: 'bool' = True, iterator: 'bool' = False, chunksize: 'int | |
|  None' = None, compression: 'CompressionOptions' = 'infer', thousands: 'str | None' = None, decima |
| l: 'str' = '.', lineterminator: 'str | None' = None, quotechar: 'str' = '"', quoting: 'int' = 0, d |
| oublequote: 'bool' = True, escapechar: 'str | None' = None, comment: 'str | None' = None, encoding |
| : 'str | None' = None, encoding_errors: 'str | None' = 'strict', dialect: 'str | csv.Dialect | Non |
| e' = None, error_bad_lines: 'bool | None' = None, warn_bad_lines: 'bool | None' = None, on_bad_lin |
| es=None, delim_whitespace: 'bool' = False, low_memory=True, memory_map: 'bool' = False, float_prec |
| ision: "Literal[('high', 'legacy')] | None" = None, storage_options: 'StorageOptions' = None) -> ' |
| DataFrame | TextFileReader'                                                                        |
|                                                                                                    |
| Definition @2.0.0 <dynamic>: (filepath_or_buffer: 'FilePath | ReadCsvBuffer[bytes] | ReadCsvBuffer |
| [str]', *, sep: 'str | None | lib.NoDefault' = <no_default>, delimiter: 'str | None | lib.NoDefaul |
| t' = None, header: "int | Sequence[int] | None | Literal['infer']" = 'infer', names: 'Sequence[Has |
| hable] | None | lib.NoDefault' = <no_default>, index_col: 'IndexLabel | Literal[False] | None' = N |
| one, usecols=None, dtype: 'DtypeArg | None' = None, engine: 'CSVEngine | None' = None, converters= |
| None, true_values=None, false_values=None, skipinitialspace: 'bool' = False, skiprows=None, skipfo |
| oter: 'int' = 0, nrows: 'int | None' = None, na_values=None, keep_default_na: 'bool' = True, na_fi |
| lter: 'bool' = True, verbose: 'bool' = False, skip_blank_lines: 'bool' = True, parse_dates: 'bool  |
| | Sequence[Hashable] | None' = None, infer_datetime_format: 'bool | lib.NoDefault' = <no_default>, |
|  keep_date_col: 'bool' = False, date_parser=<no_default>, date_format: 'str | None' = None, dayfir |
| st: 'bool' = False, cache_dates: 'bool' = True, iterator: 'bool' = False, chunksize: 'int | None'  |
| = None, compression: 'CompressionOptions' = 'infer', thousands: 'str | None' = None, decimal: 'str |
| ' = '.', lineterminator: 'str | None' = None, quotechar: 'str' = '"', quoting: 'int' = 0, doublequ |
| ote: 'bool' = True, escapechar: 'str | None' = None, comment: 'str | None' = None, encoding: 'str  |
| | None' = None, encoding_errors: 'str | None' = 'strict', dialect: 'str | csv.Dialect | None' = No |
| ne, on_bad_lines: 'str' = 'error', delim_whitespace: 'bool' = False, low_memory=True, memory_map:  |
| 'bool' = False, float_precision: "Literal[('high', 'legacy')] | None" = None, storage_options: 'St |
| orageOptions' = None, dtype_backend: 'DtypeBackend | lib.NoDefault' = <no_default>) -> 'DataFrame  |
| | TextFileReader'                                                                                  |
|                                                                                                    |
| Compatible: Yes                                                                                    |
|                                                                                                    |
|----------------------------------------------------------------------------------------------------|
|                                                                                                    |
| Invoked API #16: df.siteid.isin(closed_sites)                                                      |
|                                                                                                    |
| Location: At Line 50 in fuel_forecast_explorer/data_cleaning.py                                    |
|                                                                                                    |
| Coverage: Yes                                                                                      |
|                                                                                                    |
| Definition @1.5.3 <dynamic>: (values) -> 'Series'                                                  |
|                                                                                                    |
| Definition @2.0.0 <static>: {'pandas.core.series.Series.isin': ['(self,values)->Series'], 'pandas. |
| core.algorithms.isin': ['(comps:AnyArrayLike,values:AnyArrayLike)->npt.NDArray[np.bool_]'], 'panda |
| s.core.frame.DataFrame.isin': ['(self,values:Series|DataFrame|Sequence|Mapping)->DataFrame'], 'pan |
| das.core.arrays.datetimelike.DatetimeLikeArrayMixin.isin': ['(self,values)->npt.NDArray[np.bool_]' |
| ], 'pandas.core.arrays.string_arrow.ArrowStringArray.isin': ['(self,values)->npt.NDArray[np.bool_] |
| '], 'pandas.core.arrays.interval.IntervalArray.isin': ['(self,values)->npt.NDArray[np.bool_]'], 'p |
| andas.core.arrays.base.ExtensionArray.isin': ['(self,values)->npt.NDArray[np.bool_]'], 'pandas.cor |
| e.arrays.masked.BaseMaskedArray.isin': ['(self,values)->BooleanArray'], 'pandas.core.arrays.catego |
| rical.Categorical.isin': ['(self,values)->npt.NDArray[np.bool_]'], 'pandas.core.arrays.arrow.array |
| .ArrowExtensionArray.isin': ['(self,values)->npt.NDArray[np.bool_]'], 'pandas.core.indexes.base.In |
| dex.isin': ['(self,values,level=None)->npt.NDArray[np.bool_]'], 'pandas.core.indexes.multi.MultiIn |
| dex.isin': ['(self,values,level=None)->npt.NDArray[np.bool_]']}                                    |
|                                                                                                    |
| Compatible: Yes                                                                                    |
|                                                                                                    |
|----------------------------------------------------------------------------------------------------|


